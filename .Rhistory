library(rvest)
read_xml("http://opml.radiotime.com/")
tuneIn <- read_xml("http://opml.radiotime.com/")
tuneIn %>%
xml_node("outline")
tuneIn %>%
xml_nodes("outline")
tuneIn %>%
xml_nodes("outline") %>%>
xml_attrs("URL")
tuneIn %>%
xml_nodes("outline") %>%>
xml_attr("URL")
tuneIn %>%
xml_nodes("outline") %>%>
xml_text()
tuneIn %>%
xml_nodes("outline")
tuneIn <- read_html("http://opml.radiotime.com/")
tuneIn %>%
html_nodes(".html-attribute-value")
pg <- htmlParse("http://opml.radiotime.com/")
pg <- htmlParse("http://opml.radiotime.com/")
library(XML)
pg <- htmlParse("http://opml.radiotime.com/")
pg %>% html_nodes("a") %>% html_attr("href")
pg
pg %>% html_nodes("outline") %>% html_attr("URL")
pg %>% html_nodes("outline") %>% html_attr("url")
tuneIn <- read_xml("http://opml.radiotime.com/")
tuneIn %>%
xml_nodes("outline") %>%
xml_attr("url")
tuneIn %>%
xml_nodes("outline")# %>%
tuneIn %>%
xml_nodes("outline") %>%
xml_attr("URL")
links <- tuneIn %>%
xml_nodes("outline") %>%
xml_attr("URL")
tuneIn <- read_xml("http://opml.radiotime.com/")
links <- tuneIn %>%
xml_nodes("outline") %>%
xml_attr("URL")
for (link in links) {
print(link)
}
sub <- read_xml(link)
sub %>% xml_nodes("outline")
links <- tuneIn %>%
xml_nodes("outline")
tuneIn %>%
xml_nodes("outline")
sub %>% xml_nodes("outline")
sub_links <- sub %>% xml_nodes("outline") %>% xml_attr("URL")
sub_links
sub_text <- sub %>% xml_nodes("outline") %>% xml_attr("text")
sub_text
sub_link <- sub_link
sub_link <- sub_links[1]
stations <- read_xml(sub_link)
sub_link <- sub_links[2]
stations <- read_xml(sub_link)
stations %>% xml_nodes("outline") %>% xml_attr("URL")
stations %>% xml_nodes("outline")
stations %>% xml_nodes("outline") %>% xml_attr("URL")
stations %>% xml_nodes("outline") %>% xml_attr("URL")
text <- tuneIn %>%
xml_nodes("outline") %>%
xml_attr("text")
menu <- as.data.frame(text, stringsAsFactors = F)
View(menu)
menu$links <- links
View(menu)
tuneIn <- read_xml("http://opml.radiotime.com/")
links <- tuneIn %>%
xml_nodes("outline") %>%
xml_attr("URL")
text <- tuneIn %>%
xml_nodes("outline") %>%
xml_attr("text")
menu <- as.data.frame(text, stringsAsFactors = F)
menu$links <- links
View(menu)
select <- menu$links[menu$text="Music"]
select <- menu$links[menu$text="Music",]
select <- menu$links[menu$text=="Music"]
sub <- read_xml(select)
sub_links <- sub %>% xml_nodes("outline") %>% xml_attr("URL")
sub_text <- sub %>% xml_nodes("outline") %>% xml_attr("text")
sub_links
sub_text
dat <- as.data.frame(sub_text, stringsAsFactors = F)
dat$links <- sub_links
View(dat)
sub_links <- sub %>% xml_nodes("outline") %>% xml_attr("URL")
genres <- sub %>% xml_nodes("outline") %>% xml_attr("text")
dat <- as.data.frame(sub_text, stringsAsFactors = F)
dat$links <- sub_links
library(rvest)
tuneIn <- read_xml("http://opml.radiotime.com/")
links <- tuneIn %>%
xml_nodes("outline") %>%
xml_attr("URL")
text <- tuneIn %>%
xml_nodes("outline") %>%
xml_attr("text")
menu <- as.data.frame(text, stringsAsFactors = F)
menu$links <- links
select <- menu$links[menu$text=="Music"]
sub <- read_xml(select)
sub_links <- sub %>% xml_nodes("outline") %>% xml_attr("URL")
genres <- sub %>% xml_nodes("outline") %>% xml_attr("text")
dat <- as.data.frame(genres, stringsAsFactors = F)
dat$links <- sub_links
View(dat)
genre = genres[1]
sub <- subset(dat, genres == genre)
View(sub)
sub_links <- read_xml(sub$links) %>% xml_nodes("outline") %>% xml_attr("URL")
sub_page <- read_xml(sub$links)
sub_links <- sub_page %>% xml_nodes("outline") %>% xml_attr("URL")
text <- sub_page %>% xml_nodes("outline") %>% xml_attr("text")
text
sub_links
sub_page %>% xml_nodes("outline")
View(dat)
sub_links
stations <- as.data.frame(text, stringsAsFactors = F)
stations$links <- sub_links
View(stations)
stations <- subset(stations, grepl("/Tune.ashx?id=s", links) == TRUE)
stations <- as.data.frame(text, stringsAsFactors = F)
stations$links <- sub_links
stations <- subset(stations, grepl("/Tune.ashx?id=s", stations$links) == TRUE)
stations <- as.data.frame(text, stringsAsFactors = F)
stations$links <- sub_links
stations <- subset(stations, grepl("id=s", stations$links) == TRUE)
View(stations)
name <- sub_page %>% xml_nodes("outline") %>% xml_attr("text")
stations <- as.data.frame(text, stringsAsFactors = F)
name <- sub_page %>% xml_nodes("outline") %>% xml_attr("text")
stations <- as.data.frame(name, stringsAsFactors = F)
stations$link <- sub_links
stations <- subset(stations, grepl("id=s", stations$links) == TRUE)
stations <- as.data.frame(name, stringsAsFactors = F)
stations$link <- sub_links
stations <- subset(stations, grepl("id=s", stations$link) == TRUE)
stations$genre <- genre
View(stations)
stations$id <- gsub(".*\\=(.*)","\\1",stations$link)
View(stations)
print(genre)
all_stations <-NULL
for (genre in dat) {
print(genre)
sub <- subset(dat, genres == genre)
sub_page <- read_xml(sub$links)
sub_links <- sub_page %>% xml_nodes("outline") %>% xml_attr("URL")
name <- sub_page %>% xml_nodes("outline") %>% xml_attr("text")
stations <- as.data.frame(name, stringsAsFactors = F)
stations$link <- sub_links
stations <- subset(stations, grepl("id=s", stations$link) == TRUE)
stations$genre <- genre
stations$id <- gsub(".*\\=(.*)","\\1",stations$link)
head(stations)
Sys.sleep(3)
all_stations <- rbind(all_stations, stations)
}
rm(genre)
for (genre in dat$genres) {
print(genre)
sub <- subset(dat, genres == genre)
sub_page <- read_xml(sub$links)
sub_links <- sub_page %>% xml_nodes("outline") %>% xml_attr("URL")
name <- sub_page %>% xml_nodes("outline") %>% xml_attr("text")
stations <- as.data.frame(name, stringsAsFactors = F)
stations$link <- sub_links
stations <- subset(stations, grepl("id=s", stations$link) == TRUE)
stations$genre <- genre
stations$id <- gsub(".*\\=(.*)","\\1",stations$link)
head(stations)
Sys.sleep(3)
all_stations <- rbind(all_stations, stations)
}
View(all_stations)
View(all_stations)
View(menu)
select <- menu$links[menu$text=="By Location"]
sub <- read_xml(select)
sub_links <- sub %>% xml_nodes("outline") %>% xml_attr("URL")
genres <- sub %>% xml_nodes("outline") %>% xml_attr("text")
dat <- as.data.frame(genres, stringsAsFactors = F)
dat$links <- sub_links
View(dat)
continents <- sub %>% xml_nodes("outline") %>% xml_attr("text")
continents <- sub %>% xml_nodes("outline") %>% xml_attr("text")
dat <- as.data.frame(continents, stringsAsFactors = F)
dat$links <- sub_links
View(dat)
continent <- dat$continents[1]
print(continent)
sub <- subset(dat, continents == continent)
sub_page <- read_xml(sub$links)
sub_links <- sub_page %>% xml_nodes("outline") %>% xml_attr("URL")
name <- sub_page %>% xml_nodes("outline") %>% xml_attr("text")
name
countries <- sub_page %>% xml_nodes("outline") %>% xml_attr("text")
stations <- as.data.frame(countries, stringsAsFactors = F)
stations$link <- sub_links
View(stations)
countries <- as.data.frame(countries, stringsAsFactors = F)
countries$link <- sub_links
View(countries)
country <- countries$countries[1]
country <- countries$link[1]
read_xml(country)
sub_links <- sub_page %>% xml_nodes("outline") %>% xml_attr("URL")
what <- sub_page %>% xml_nodes("outline") %>% xml_attr("text")
what
sub_page <- read_xml(country)
sub_links <- sub_page %>% xml_nodes("outline") %>% xml_attr("URL")
what <- sub_page %>% xml_nodes("outline") %>% xml_attr("text")
what
setwd("D:/touch-screen-pi-sonos-app/assets")
all_stations$id <- gsub("s","",all_stations$id)
View(all_stations)
saveRDS(all_stations, "tuneIn_stations.rds")
tuneIn <- readRDS("assets/tuneIn_stations.rds")
setwd("D:/touch-screen-pi-sonos-app")
tuneIn <- readRDS("assets/tuneIn_stations.rds")
library(shiny); runApp('app - Copy.R')
View(all_stations)
runApp('app - Copy.R')
runApp('app - Copy.R')
runApp('app - Copy.R')
c(1:length(tuneIn$id))
sample(c(1:length(tuneIn$id)),1)
random_radio <- tuneIn$id[random_radio]
random_radio <- sample(c(1:length(tuneIn$id)),1)
random_radio <- tuneIn$id[random_radio]
runApp('app - Copy.R')
runApp('app - Copy.R')
runApp('app - Copy.R')
runApp('app - Copy.R')
runApp('app - Copy.R')
runApp('app - Copy.R')
runApp('app - Copy.R')
runApp('app - Copy.R')
View(all_stations)
